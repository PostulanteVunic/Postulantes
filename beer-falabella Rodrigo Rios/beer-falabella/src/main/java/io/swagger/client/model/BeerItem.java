/*
 * API Falabella FIF
 * Esta API esta dise√±ada para ser una prueba para los nuevos candidatos al equipo.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: lugaetea@falabella.cl
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * BeerItem
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-09-23T12:50:09.794-03:00[America/Santiago]")public class BeerItem {

  @SerializedName("Id")
  private Integer id = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Brewery")
  private String brewery = null;

  @SerializedName("Country")
  private String country = null;

  @SerializedName("Price")
  private BigDecimal price = null;

  @SerializedName("Currency")
  private String currency = null;
  public BeerItem id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(example = "1", required = true, description = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public BeerItem name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(example = "Golden", required = true, description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public BeerItem brewery(String brewery) {
    this.brewery = brewery;
    return this;
  }

  

  /**
  * Get brewery
  * @return brewery
  **/
  @Schema(example = "Kross", required = true, description = "")
  public String getBrewery() {
    return brewery;
  }
  public void setBrewery(String brewery) {
    this.brewery = brewery;
  }
  public BeerItem country(String country) {
    this.country = country;
    return this;
  }

  

  /**
  * Get country
  * @return country
  **/
  @Schema(example = "Chile", required = true, description = "")
  public String getCountry() {
    return country;
  }
  public void setCountry(String country) {
    this.country = country;
  }
  public BeerItem price(BigDecimal price) {
    this.price = price;
    return this;
  }

  

  /**
  * Get price
  * @return price
  **/
  @Schema(example = "10.5", required = true, description = "")
  public BigDecimal getPrice() {
    return price;
  }
  public void setPrice(BigDecimal price) {
    this.price = price;
  }
  public BeerItem currency(String currency) {
    this.currency = currency;
    return this;
  }

  

  /**
  * Get currency
  * @return currency
  **/
  @Schema(example = "EUR", required = true, description = "")
  public String getCurrency() {
    return currency;
  }
  public void setCurrency(String currency) {
    this.currency = currency;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BeerItem beerItem = (BeerItem) o;
    return Objects.equals(this.id, beerItem.id) &&
        Objects.equals(this.name, beerItem.name) &&
        Objects.equals(this.brewery, beerItem.brewery) &&
        Objects.equals(this.country, beerItem.country) &&
        Objects.equals(this.price, beerItem.price) &&
        Objects.equals(this.currency, beerItem.currency);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, name, brewery, country, price, currency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BeerItem {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    brewery: ").append(toIndentedString(brewery)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
